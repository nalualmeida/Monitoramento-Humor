<!DOCTYPE html>
<html lang="pt">

<head>
  <link rel="stylesheet" href="style.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css' rel='stylesheet'>
  <link href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css' rel='stylesheet'>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Meu Humor - Estatísticas</title>
  <style>
    body {
      background-color: #c3e1fff4;
    }

    .w-grafico {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
      flex-wrap: wrap;
      width: 100%;
    }
  </style>
</head>

<body>

  <div class="container">
    <header class="navbar navbar-expand-md fixed-top py-3">
      <div class="container-fluid flex-nowrap justify-content-between align-items-center">
        <svg class="bi me-2" width="40" height="32">LOGO DO APPP</svg>
        <h2>Meu Humor</h2>
        <div class="">
          <ul class="navbar-nav me-auto mb-md-0"></ul>
          <button type="button" class="btn btn-outline-light" onclick="confirmLogout()">Sair</button>
        </div>
      </div>
    </header>
  </div>

  <main class="py-5">

    <div class="mt-5 pt-2 mb-5 pb-2 text-center">
      <div class="px-5 position-relative text-center text-muted">
        <h1 class="text-center text-black">Estatísticas de Humor</h1>
        <div class="container mb-4">
          <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="viewOption" id="viewMensal" value="mensal" checked>
            <label class="form-check-label" for="viewMensal">Mensal</label>
          </div>
          <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="viewOption" id="viewAnual" value="anual">
            <label class="form-check-label" for="viewAnual">Anual</label>
          </div>
        </div>
        <div class="mt-3" id="monthSelector" style="display: none;">
          <button id="prevMonth" class="btn btn-secondary btn-sm">&larr;</button>
          <span id="selectedMonth" class="mx-2"></span>
          <button id="nextMonth" class="btn btn-secondary btn-sm">&rarr;</button>
        </div>
        <div class="mt-3" id="yearSelector" style="display: none;">
          <button id="prevYear" class="btn btn-secondary btn-sm">&larr;</button>
          <span id="selectedYear" class="mx-2"></span>
          <button id="nextYear" class="btn btn-secondary btn-sm">&rarr;</button>
        </div>
        <div class="w-grafico" id="mensalCharts" style="display: block;">
          <!-- Elementos para gráficos mensais aqui -->
          <div class="col-md-6 d-flex align-items-center justify-content-center-">
            <canvas class="w-100" id="monthlyMoodChart"></canvas>
          </div>
          <div class="col-md-6 d-flex align-items-center justify-content-center">
            <canvas class="w-100" id="monthlyMoodCountChart"></canvas>
          </div>
        </div>
        <div class="w-grafico" id="anualCharts" style="display: none;">
          <!-- Elementos para gráficos anuais aqui -->
          <div class="col-md-6 d-flex align-items-center justify-content-center-">
            <canvas class="w-100" id="annualMoodChart"></canvas>
          </div>
          <div class="col-md-6 d-flex align-items-center justify-content-center">
            <canvas class="w-100" id="annualMoodCountChart"></canvas>
          </div>
        </div>
      </div>
    </div>

  </main>
  <footer class="border-bottom py-3 fixed-bottom text-center">
    <div class="row align-items-center">
      <div class="col nav-item">
        <a href="/dashboard" class="nav-link text-white text-decoration-none">Dashboard</a>
      </div>
      <div class="col nav-item">
        <a class="nav-link text-white text-decoration-none" href="/estatisticas">Estatísticas</a>
      </div>
      <div class="col nav-item">
        <a class="nav-link text-white text-decoration-none" href="/addHumor">+</a>
      </div>
      <div class="col nav-item">
        <a class="nav-link text-white text-decoration-none" href="/calendario">Calendário</a>
      </div>
      <div class="col nav-item">
        <a class="nav-link text-white text-decoration-none" href="/atividades">Atividades</a>
      </div>
    </div>
  </footer>

  <script>
  const moodMap = {
    1: 'horrível',
    2: 'mal',
    3: 'mais ou menos',
    4: 'bem',
    5: 'excelente'
  };

  function getColorForMood(value) {
    if (value < 1) return 'rgba(242, 242, 242, 0.7)';
    if (value >= 1 && value < 1.5) return 'rgba(199, 33, 80, 0.7)';
    if (value >= 1.5 && value < 2.5) return 'rgba(199, 113, 33, 0.7)';
    if (value >= 2.5 && value < 3.5) return 'rgba(240, 230, 36, 0.7)';
    if (value >= 3.5 && value < 4.5) return 'rgba(155, 199, 33, 0.7)';
    if (value >= 4.5) return 'rgba(51, 255, 0, 0.7)';
  }

  document.addEventListener('DOMContentLoaded', function () {
    const yearSelector = document.getElementById('yearSelector');
    const monthSelector = document.getElementById('monthSelector');
    const viewMensal = document.getElementById("viewMensal");
    const viewAnual = document.getElementById("viewAnual");

    function toggleChartsVisibility() {
      const monthSelector = document.getElementById("monthSelector");
      const yearSelector = document.getElementById('yearSelector');
      const mensalCharts = document.getElementById("mensalCharts");
      const anualCharts = document.getElementById("anualCharts");

      if (viewMensal.checked) {
        monthSelector.style.display = "block";
        yearSelector.style.display = "none";
        mensalCharts.style.display = "flex";
        anualCharts.style.display = "none";
      } else if (viewAnual.checked) {
        monthSelector.style.display = "none";
        yearSelector.style.display = "block";
        mensalCharts.style.display = "none";
        anualCharts.style.display = "flex";
      }
    }

    toggleChartsVisibility();

    viewMensal.addEventListener("change", toggleChartsVisibility);
    viewAnual.addEventListener("change", toggleChartsVisibility);

    const monthNames = ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"];

    function updateSelectedMonth(date) {
      const selectedMonth = document.getElementById("selectedMonth");
      const currentMonth = monthNames[date.getMonth()];
      const currentYear = date.getFullYear();
      selectedMonth.textContent = currentMonth + " " + currentYear;
    }

    function updateSelectedYear(date) {
      const selectedYear = document.getElementById("selectedYear");
      const currentYear = date.getFullYear();
      selectedYear.textContent = currentYear;
    }

    const currentDate = new Date();
    updateSelectedMonth(currentDate);

    const currentDateAno = new Date();
    updateSelectedYear(currentDateAno);

    // Função para atualizar os gráficos mensais
    function updateMonthlyCharts() {
  const yearSelector = document.getElementById('yearSelector');
  const monthSelector = document.getElementById('monthSelector');

  console.log('Year Selector:', yearSelector); // Verifica se yearSelector está selecionando o elemento corretamente
  console.log('Month Selector:', monthSelector); // Verifica se monthSelector está selecionando o elemento corretamente

  // Verifica se yearSelector e monthSelector não são nulos e se têm valores definidos
  if (yearSelector && monthSelector) {
    const monthYearString = document.getElementById("selectedMonth").textContent;
    const [monthName, yearString] = monthYearString.split(" ");
    const year = parseInt(yearString);
    const month = monthNames.indexOf(monthName);

    console.log('Year:', year, 'Month:', month); // Verifique se year e month estão definidos corretamente

    // Chame a função que atualiza o gráfico mensal com os dados corretos
    fetchDataAndDrawChart(year, month);
  } else {
    console.error("Ano ou mês não definido.");
  }
}

    updateMonthlyCharts();
    updateAnnualCharts(currentDateAno.getFullYear());

    const prevMonthBtn = document.getElementById("prevMonth");
    const nextMonthBtn = document.getElementById("nextMonth");
    const prevYearBtn = document.getElementById("prevYear");
    const nextYearBtn = document.getElementById("nextYear");

    prevMonthBtn.addEventListener("click", function () {
      currentDate.setMonth(currentDate.getMonth() - 1);
      updateSelectedMonth(currentDate);
      updateMonthlyCharts();
    });

    nextMonthBtn.addEventListener("click", function () {
      currentDate.setMonth(currentDate.getMonth() + 1);
      updateSelectedMonth(currentDate);
      updateMonthlyCharts();
    });

    prevYearBtn.addEventListener("click", function () {
      currentDateAno.setFullYear(currentDateAno.getFullYear() - 1);
      updateSelectedYear(currentDateAno);
      updateAnnualCharts(currentDateAno.getFullYear());
    });

    nextYearBtn.addEventListener("click", function () {
      currentDateAno.setFullYear(currentDateAno.getFullYear() + 1);
      updateSelectedYear(currentDateAno);
      updateAnnualCharts(currentDateAno.getFullYear());
    });

    function updateAnnualCharts(year) {
      fetch('/getAnnualData?year=' + year)
        .then(response => response.json())
        .then(data => {
          // Desenhar o gráfico de humor ao longo do ano
          drawAnnualMoodChart(data.anual);

          // Desenhar o gráfico de contagem de humor
          drawAnnualMoodCountChart(data.contagem);
        });
    }

    function drawAnnualMoodChart(anualData) {
      const ctxAnnualMoodChart = document.getElementById('annualMoodChart').getContext('2d');

      // Destruir o gráfico anterior se existir
      if (window.annualMoodChart instanceof Chart) {
        window.annualMoodChart.destroy();
      }

      const moodChartAnual = new Chart(ctxAnnualMoodChart, {
        type: 'line',
        data: {
          labels: anualData.labels,
          datasets: [{
            label: 'Humor ao longo do ano',
            data: anualData.moodValues,
            borderColor: 'rgba(159, 156, 242, 1)',
            borderWidth: 3,
            hoverBorderColor: 'rgba(185, 183, 234, 1)',
            pointStyle: 'circle',
            pointRadius: 7,
            pointHoverRadius: 14,
            fill: false,
            tension: 0.3,
            pointBackgroundColor: anualData.moodValues.map(value => getColorForMood(value))
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            x: {
              display: true,
              title: {
                display: true,
                text: 'Mês'
              }
            },
            y: {
              beginAtZero: true,
              min: -0.5,
              max: 5.5,
              stepSize: 1,
              display: true,
              title: {
                display: true,
                text: 'Humor'
              },
              ticks: {
                padding: 10,
                callback: function (value) {
                  return moodMap[value] || '';
                }
              }
            }
          },
          plugins: {
            tooltip: {
              intersect: false
            }
          },
          elements: {
            point: {
              radius: 5,
              hoverRadius: 10,
              hitRadius: 10
            }
          }
        }
      });

      // Salvar a referência do gráfico para destruição posterior
      window.annualMoodChart = moodChartAnual;
    }

    function drawAnnualMoodCountChart(contagemData) {
      const ctxAnnualMoodCountChart = document.getElementById('annualMoodCountChart').getContext('2d');

      // Destruir o gráfico anterior se existir
      if (window.annualMoodCountChart instanceof Chart) {
        window.annualMoodCountChart.destroy();
      }

      const contagemHumores = contagemData;
      const labelsHumores = Object.keys(moodMap).filter(key => key !== '0').map(key => moodMap[key]);
      const valoresHumores = labelsHumores.map(humor => contagemHumores[humor] || 0);
      const colorsForBars = labelsHumores.map(humor => {
        switch (humor) {
          case '':
            return 'rgba(242, 242, 242, 0.7)';
          case 'horrível':
            return 'rgba(199, 33, 80, 0.7)';
          case 'mal':
            return 'rgba(199, 113, 33, 0.7)';
          case 'mais ou menos':
            return 'rgba(240, 230, 36, 0.7)';
          case 'bem':
            return 'rgba(155, 199, 33, 0.7)';
          case 'excelente':
            return 'rgba(51, 255, 0, 0.5)';
        }
      });

      const moodChartCountAnual = new Chart(ctxAnnualMoodCountChart, {
        type: 'bar',
        data: {
          labels: labelsHumores,
          datasets: [{
            label: 'Contagem de humores',
            data: valoresHumores,
            backgroundColor: colorsForBars,
            borderColor: 'rgba(159, 156, 242, 1)',
            borderWidth: 3,
            borderRadius: 35,
            borderSkipped: false,
            hoverBorderColor: 'rgba(185, 183, 234, 1)',
            fill: false
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            tooltip: {
              intersect: false
            }
          },
          elements: {
            point: {
              radius: 5,
              hoverRadius: 10,
              hitRadius: 10
            }
          },
          scales: {
            x: {
              display: true,
              title: {
                display: true,
                text: 'Humor'
              }
            },
            y: {
              beginAtZero: true,
              display: true,
              title: {
                display: true,
                text: 'Contagem'
              },
              ticks: {
                stepSize: 1,
                callback: function (value) {
                  if (Number.isInteger(value)) {
                    return value;
                  }
                  return '';
                }
              }
            }
          }
        }
      });

      // Salvar a referência do gráfico para destruição posterior
      window.annualMoodCountChart = moodChartCountAnual;
    }

    yearSelector.addEventListener('change', updateMonthlyCharts);
    monthSelector.addEventListener('change', updateMonthlyCharts);

    function fetchDataAndDrawChart(year, month) {
  fetch(`/getMonthlyData?year=${year}&month=${month}`)
    .then(response => response.json())
    .then(data => {
      drawMonthlyMoodChart(data.mensal);
      drawMonthlyMoodCountChart(data.contagem);
    });
}

    function drawMonthlyMoodChart(mensalData) {
      const ctxMonthlyMoodChart = document.getElementById('monthlyMoodChart').getContext('2d');

      // Destruir o gráfico anterior se existir
      if (window.monthlyMoodChart instanceof Chart) {
        window.monthlyMoodChart.destroy();
      }

      const moodChartMensal = new Chart(ctxMonthlyMoodChart, {
        type: 'line',
        data: {
          labels: mensalData.labels,
          datasets: [{
            label: 'Humor ao longo do mês',
            data: mensalData.moodValues,
            borderColor: 'rgba(159, 156, 242, 1)',
            borderWidth: 3,
            hoverBorderColor: 'rgba(185, 183, 234, 1)',
            pointStyle: 'circle',
            pointRadius: 7,
            pointHoverRadius: 14,
            fill: false,
            tension: 0.3,
            pointBackgroundColor: mensalData.moodValues.map(value => getColorForMood(value))
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            x: {
              display: true,
              title: {
                display: true,
                text: 'Dia'
              }
            },
            y: {
              beginAtZero: true,
              min: -0.5,
              max: 5.5,
              stepSize: 1,
              display: true,
              title: {
                display: true,
                text: 'Humor'
              },
              ticks: {
                padding: 10,
                callback: function (value) {
                  return moodMap[value] || '';
                }
              }
            }
          },
          plugins: {
            tooltip: {
              intersect: false
            }
          },
          elements: {
            point: {
              radius: 5,
              hoverRadius: 10,
              hitRadius: 10
            }
          }
        }
      });

      // Salvar a referência do gráfico para destruição posterior
      window.monthlyMoodChart = moodChartMensal;
    }

    function drawMonthlyMoodCountChart(contagemData) {
      const ctxMonthlyMoodCountChart = document.getElementById('monthlyMoodCountChart').getContext('2d');

      // Destruir o gráfico anterior se existir
      if (window.monthlyMoodCountChart instanceof Chart) {
        window.monthlyMoodCountChart.destroy();
      }

      const contagemHumores = contagemData;
      const labelsHumores = Object.keys(moodMap).filter(key => key !== '0').map(key => moodMap[key]);
      const valoresHumores = labelsHumores.map(humor => contagemHumores[humor] || 0);
      const colorsForBars = labelsHumores.map(humor => {
        switch (humor) {
          case '':
            return 'rgba(242, 242, 242, 0.7)';
          case 'horrível':
            return 'rgba(199, 33, 80, 0.7)';
          case 'mal':
            return 'rgba(199, 113, 33, 0.7)';
          case 'mais ou menos':
            return 'rgba(240, 230, 36, 0.7)';
          case 'bem':
            return 'rgba(155, 199, 33, 0.7)';
          case 'excelente':
            return 'rgba(51, 255, 0, 0.5)';
        }
      });

      const moodChartCountMensal = new Chart(ctxMonthlyMoodCountChart, {
        type: 'bar',
        data: {
          labels: labelsHumores,
          datasets: [{
            label: 'Contagem de humores',
            data: valoresHumores,
            backgroundColor: colorsForBars,
            borderColor: 'rgba(159, 156, 242, 1)',
            borderWidth: 3,
            borderRadius: 35,
            borderSkipped: false,
            hoverBorderColor: 'rgba(185, 183, 234, 1)',
            fill: false
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            tooltip: {
              intersect: false
            }
          },
          elements: {
            point: {
              radius: 5,
              hoverRadius: 10,
              hitRadius: 10
            }
          },
          scales: {
            x: {
              display: true,
              title: {
                display: true,
                text: 'Humor'
              }
            },
            y: {
              beginAtZero: true,
              display: true,
              title: {
                display: true,
                text: 'Contagem'
              },
              ticks: {
                stepSize: 1,
                callback: function (value) {
                  if (Number.isInteger(value)) {
                    return value;
                  }
                  return '';
                }
              }
            }
          }
        }
      });

      // Salvar a referência do gráfico para destruição posterior
      window.monthlyMoodCountChart = moodChartCountMensal;
    }

  });

// LOGOUT

function confirmLogout() {
    if (confirm("Você realmente quer sair?")) {
      window.location.href = "/logout";
    }
  }
</script>


</body>
</html>